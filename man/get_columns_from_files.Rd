% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_columns_from_files.R
\name{get_columns_from_files}
\alias{get_columns_from_files}
\title{Retrieve all columns from each dataset and columns that occur more than once across those datasets}
\usage{
get_columns_from_files(wd = getwd(), common = FALSE)
}
\arguments{
\item{wd}{String. Your specified working directory; points to the directory where the .csv files you want    to work with live. I.e., \code{getwd()}, \code{setwd("./data examples")}.}

\item{common}{Logical. Defaults to \code{FALSE}. In default status, the function returns a full dataframe of     all columns within each of the files in your working directory. If set to \code{TRUE}, the function returns a    single list of columns that occur more than once across all of your files.}
}
\value{
one of two dataframes. If common set to \code{FALSE}, returns a dataframe of all columns in the files    within your working directory. If common set to \code{TRUE}, returns a list of common columns across your        files.
}
\description{
\code{get_columns_from_files()} produces two dataframes: one that lists all columns from within     each of the .csv's in a specified working directory and another that lists all columns which appear more    than once across those .csv's.
}
\details{
\code{get_columns_from_files()} can be used as an initial step in data processing, particularly if      the goal of the data processing is to merge multiple files into one, larger flat file. The function         allows the user to preview and list out what columns exist within any given number of .csv's in a format    that is more digestible. If the user chooses, they can also find commonalities across the columns in        those files, highlighting any columns that serve as key variables upon which dataframes can then be         joined.
}
\examples{
\dontrun{
get_columns_from_files(wd = setwd("./data examples"), common = TRUE)
}

}
